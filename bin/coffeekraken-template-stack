#!/usr/bin/env node
process.title = 'coffeekraken-template-stack';
const __server = require(__dirname + '/../app/server');
const __fs = require('fs');
const __path = require('path');
const __merge = require('lodash/merge');
const app = require('commander');

(function() {

	app
		.version('1.0.0')
		.option('-p --port [port]', 'Port on which to start the server', /^\S+$/i)
		.option('-c --config [config]', 'Configuration file to load', /^\S+$/i)
		.parse(process.argv);

	// extend config
	const defaultConfig = require(__dirname + '/../template-stack.config');
	let config = {};
	if (app.config) {
		app.config = __path.resolve(app.config);
		if ( ! __fs.existsSync(app.config)) {
			throw 'Template stack app : the configuration file "' + app.config + '" does not exist...';
		}
		// load the config file
		config = require(app.config);
	} else {
		if (__fs.existsSync(process.env.PWD + '/template-stack.config.js')) {
			config = require(process.env.PWD + '/template-stack.config.js');
		}
	}

	const finalConfig = __merge({}, defaultConfig, config);

	for(let key in app._events) {
		if (app[key] !== undefined) {
			if (typeof(app[key]) === 'function') {
				finalConfig[key] = app[key]();
			} else {
				finalConfig[key] = app[key];
			}
		}
	}

	if ( ! finalConfig.port) {
		console.error('Template stack app : you have to specify at least a port to run the server on...');
		return;
	}

	console.log(`Template stack app : ...starting on port ${finalConfig.port}...`);

	// launch the server
	__server(finalConfig);

})();

// clear the process properly
process.on( 'SIGINT', function() {
	console.log('Template stack app : stopped');
	// some other closing procedures go here
	process.exit( );
});
